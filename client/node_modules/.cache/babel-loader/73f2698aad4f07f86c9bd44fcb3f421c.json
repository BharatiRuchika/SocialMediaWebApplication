{"ast":null,"code":"import { MESSAGE_TYPES } from \"../actions/messageAction\";\nconst initialState = {\n  users: [],\n  resultUsers: 0,\n  data: [],\n  resultData: 0,\n  firstLoad: false\n};\n\nconst messageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"im in message reducer\");\n  console.log(\"state\", state);\n  console.log(\"payload\", action.payload);\n  console.log(\"users\", state.users);\n\n  switch (action.type) {\n    case MESSAGE_TYPES.ADD_USER:\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n\n    case MESSAGE_TYPES.ADD_MESSAGE:\n      console.log(\"im in message tyoes add message reducer\");\n      console.log(\"payload\", action.payload);\n      return { ...state,\n        data: [...state.data, action.payload],\n        users: state.users.map(user => user._id === action.payload.recipient || user._id === action.payload.sender ? { ...user,\n          text: action.payload.text,\n          media: action.payload.media\n        } : user)\n      };\n\n    case MESSAGE_TYPES.GET_CONVERSATIONS:\n      return { ...state,\n        users: action.payload.newArr,\n        resultUsers: action.payload.result,\n        firstLoad: true\n      };\n\n    case MESSAGE_TYPES.GET_MESSAGES:\n      return { ...state,\n        data: action.payload.messages.reverse(),\n        resultData: action.payload.result\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default messageReducer;","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/SocialMediaProject-main/client/src/redux/reducers/messageReducer.js"],"names":["MESSAGE_TYPES","initialState","users","resultUsers","data","resultData","firstLoad","messageReducer","state","action","console","log","payload","type","ADD_USER","ADD_MESSAGE","map","user","_id","recipient","sender","text","media","GET_CONVERSATIONS","newArr","result","GET_MESSAGES","messages","reverse"],"mappings":"AAAA,SAASA,aAAT,QAA8B,0BAA9B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,WAAW,EAAE,CAFI;AAGjBC,EAAAA,IAAI,EAAE,EAHW;AAIjBC,EAAAA,UAAU,EAAE,CAJK;AAKjBC,EAAAA,SAAS,EAAE;AALM,CAArB;;AAQA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,KAApB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,MAAM,CAACG,OAA7B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,KAAK,CAACN,KAA1B;;AACA,UAAQO,MAAM,CAACI,IAAf;AAEE,SAAKb,aAAa,CAACc,QAAnB;AACE,aAAO,EACL,GAAGN,KADE;AAELN,QAAAA,KAAK,EAAE,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAgBO,MAAM,CAACG,OAAvB;AAFF,OAAP;;AAKF,SAAKZ,aAAa,CAACe,WAAnB;AACEL,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,MAAM,CAACG,OAA7B;AACA,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBK,MAAM,CAACG,OAAvB,CAFD;AAGLV,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYc,GAAZ,CAAiBC,IAAD,IACrBA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeO,SAA5B,IACAF,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeQ,MAD5B,GAEI,EACE,GAAGH,IADL;AAEEI,UAAAA,IAAI,EAAEZ,MAAM,CAACG,OAAP,CAAeS,IAFvB;AAGEC,UAAAA,KAAK,EAAEb,MAAM,CAACG,OAAP,CAAeU;AAHxB,SAFJ,GAOIL,IARC;AAHF,OAAP;;AAeF,SAAKjB,aAAa,CAACuB,iBAAnB;AACE,aAAO,EACL,GAAGf,KADE;AAELN,QAAAA,KAAK,EAAEO,MAAM,CAACG,OAAP,CAAeY,MAFjB;AAGLrB,QAAAA,WAAW,EAAEM,MAAM,CAACG,OAAP,CAAea,MAHvB;AAILnB,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAOF,SAAKN,aAAa,CAAC0B,YAAnB;AACE,aAAO,EACL,GAAGlB,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACG,OAAP,CAAee,QAAf,CAAwBC,OAAxB,EAFD;AAGLvB,QAAAA,UAAU,EAAEI,MAAM,CAACG,OAAP,CAAea;AAHtB,OAAP;;AAMF;AACE,aAAOjB,KAAP;AA1CJ;AA4CD,CAjDD;;AAmDA,eAAeD,cAAf","sourcesContent":["import { MESSAGE_TYPES } from \"../actions/messageAction\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    resultUsers: 0,\r\n    data: [],\r\n    resultData: 0,\r\n    firstLoad: false \r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n  console.log(\"im in message reducer\");\r\n  console.log(\"state\",state);\r\n  console.log(\"payload\",action.payload);\r\n  console.log(\"users\",state.users);\r\n  switch (action.type) {\r\n    \r\n    case MESSAGE_TYPES.ADD_USER:\r\n      return {\r\n        ...state,\r\n        users: [...state.users,action.payload],\r\n      };\r\n\r\n    case MESSAGE_TYPES.ADD_MESSAGE:\r\n      console.log(\"im in message tyoes add message reducer\");\r\n      console.log(\"payload\",action.payload);\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload],\r\n        users: state.users.map((user) =>\r\n          user._id === action.payload.recipient ||\r\n          user._id === action.payload.sender\r\n            ? {\r\n                ...user,\r\n                text: action.payload.text,\r\n                media: action.payload.media,\r\n              }\r\n            : user\r\n        ),\r\n      };\r\n\r\n    case MESSAGE_TYPES.GET_CONVERSATIONS:\r\n      return {\r\n        ...state,\r\n        users: action.payload.newArr,\r\n        resultUsers: action.payload.result,\r\n        firstLoad: true\r\n      };\r\n\r\n    case MESSAGE_TYPES.GET_MESSAGES:\r\n      return {\r\n        ...state,\r\n        data: action.payload.messages.reverse(),\r\n        resultData: action.payload.result,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messageReducer;\r\n"]},"metadata":{},"sourceType":"module"}