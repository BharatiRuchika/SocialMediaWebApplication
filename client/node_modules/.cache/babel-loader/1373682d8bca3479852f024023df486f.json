{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { POST_TYPES } from \"./redux/actions/postAction\";\nimport { ADMIN_TYPES } from \"./redux/actions/adminAction\";\nimport { GLOBALTYPES } from \"./redux/actions/globalTypes\";\nimport { NOTIFY_TYPES } from \"./redux/actions/notifyAction\";\nimport { MESSAGE_TYPES } from \"./redux/actions/messageAction\";\nimport audioTone from './audio/pristine-609.mp3'; // spawnNotification(\n//   msg.user.username + \" \" + msg.text,\n//   msg.user.avatar,\n//   msg.url,\n//   \"CAMPUS CONNECT\"\n// );\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst spawnNotification = (body, icon, url, title) => {\n  let options = {\n    body,\n    icon\n  };\n  let n = new Notification(title, options);\n\n  n.onclick = e => {\n    e.preventDefault();\n    window.open(url, '_blank');\n  };\n};\n\nconst SocketClient = () => {\n  _s();\n\n  const {\n    auth,\n    socket,\n    notify\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const audioRef = useRef(); //!connection\n\n  useEffect(() => {\n    if (auth.user.role === \"user\") {\n      socket.emit(\"joinUser\", auth.user._id);\n    } else if (auth.user.role === \"admin\") {\n      socket.emit(\"joinAdmin\", auth.user._id);\n    }\n  }, [socket, auth.user.role, auth.user._id]);\n  useEffect(() => {\n    socket.on(\"getActiveUsersToClient\", totalActiveUsers => {\n      console.log(\"totalActiveUsers\", totalActiveUsers);\n      dispatch({\n        type: ADMIN_TYPES.GET_TOTAL_ACTIVE_USERS,\n        payload: totalActiveUsers\n      });\n    });\n    return () => socket.off(\"getActiveUsersToClient\");\n  }, [socket, dispatch]); //!like Post\n\n  useEffect(() => {\n    socket.on(\"likeToClient\", newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"likeToClient\");\n  }, [socket, dispatch]); //!Unlike Post\n\n  useEffect(() => {\n    socket.on(\"unLikeToClient\", newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"unLikeToClient\");\n  }, [socket, dispatch]); //!Comments\n\n  useEffect(() => {\n    socket.on(\"createCommentToClient\", newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"createCommentToClient\");\n  }, [socket, dispatch]);\n  useEffect(() => {\n    socket.on(\"deleteCommentToClient\", newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"deleteCommentToClient\");\n  }, [socket, dispatch]); //!Follow\n\n  useEffect(() => {\n    socket.on(\"followToClient\", newUser => {\n      dispatch({\n        type: GLOBALTYPES.AUTH,\n        payload: { ...auth,\n          user: newUser\n        }\n      });\n    });\n    return () => socket.off(\"followToClient\");\n  }, [socket, dispatch, auth]);\n  useEffect(() => {\n    socket.on(\"unFollowToClient\", newUser => {\n      dispatch({\n        type: GLOBALTYPES.AUTH,\n        payload: { ...auth,\n          user: newUser\n        }\n      });\n    });\n    return () => socket.off(\"unFollowToClient\");\n  }, [socket, dispatch, auth]); //!Notifications\n\n  useEffect(() => {\n    socket.on(\"createNotifyToClient\", msg => {\n      dispatch({\n        type: NOTIFY_TYPES.CREATE_NOTIFY,\n        payload: msg\n      });\n      const audio = new Audio(audioTone);\n      audio.play();\n\n      if (notify.sound) {\n        audioRef.current.play();\n      }\n\n      spawnNotification(msg.user.username + \" \" + msg.text, msg.user.avatar, msg.url, \"CAMPUS CONNECT\");\n    });\n    return () => socket.off(\"createNotifyToClient\");\n  }, [socket, dispatch, notify.sound]);\n  useEffect(() => {\n    socket.on(\"removeNotifyToClient\", msg => {\n      dispatch({\n        type: NOTIFY_TYPES.REMOVE_NOTIFY,\n        payload: msg\n      });\n    });\n    return () => socket.off(\"removeNotifyToClient\");\n  }, [socket, dispatch]); //!Messages\n\n  useEffect(() => {\n    socket.on(\"addMessageToClient\", msg => {\n      console.log(\"addMessageToClient socket called\");\n      dispatch({\n        type: MESSAGE_TYPES.ADD_MESSAGE,\n        payload: msg\n      });\n    });\n    return () => socket.off(\"addMessageToClient\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(SocketClient, \"73xmQjRVcTE9KoqDu+sbC6f1AVU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SocketClient;\nexport default SocketClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketClient\");","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/SocialMediaProject-main/client/src/SocketClient.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","POST_TYPES","ADMIN_TYPES","GLOBALTYPES","NOTIFY_TYPES","MESSAGE_TYPES","audioTone","spawnNotification","body","icon","url","title","options","n","Notification","onclick","e","preventDefault","window","open","SocketClient","auth","socket","notify","state","dispatch","audioRef","user","role","emit","_id","on","totalActiveUsers","console","log","type","GET_TOTAL_ACTIVE_USERS","payload","off","newPost","UPDATE_POST","newUser","AUTH","msg","CREATE_NOTIFY","audio","Audio","play","sound","current","username","text","avatar","REMOVE_NOTIFY","ADD_MESSAGE"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { POST_TYPES } from \"./redux/actions/postAction\";\r\nimport { ADMIN_TYPES } from \"./redux/actions/adminAction\";\r\nimport { GLOBALTYPES } from \"./redux/actions/globalTypes\";\r\nimport { NOTIFY_TYPES } from \"./redux/actions/notifyAction\";\r\nimport { MESSAGE_TYPES } from \"./redux/actions/messageAction\";\r\n\r\nimport audioTone from './audio/pristine-609.mp3' \r\n\r\n// spawnNotification(\r\n//   msg.user.username + \" \" + msg.text,\r\n//   msg.user.avatar,\r\n//   msg.url,\r\n//   \"CAMPUS CONNECT\"\r\n// );\r\nconst spawnNotification = (body, icon, url, title) => {\r\n  let options = {\r\n    body, icon\r\n  }\r\n  let n = new Notification(title, options);\r\n  n.onclick =  e => {\r\n    e.preventDefault();\r\n    window.open(url, '_blank');\r\n  }\r\n}\r\n\r\nconst SocketClient = () => {\r\n  const { auth, socket, notify } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const audioRef = useRef();\r\n\r\n  //!connection\r\n  useEffect(() => {\r\n    if (auth.user.role === \"user\") {\r\n      socket.emit(\"joinUser\", auth.user._id);\r\n    } else if (auth.user.role === \"admin\") {\r\n      socket.emit(\"joinAdmin\", auth.user._id);\r\n    }\r\n  }, [socket, auth.user.role, auth.user._id]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"getActiveUsersToClient\", (totalActiveUsers) => {\r\n      console.log(\"totalActiveUsers\",totalActiveUsers);\r\n      dispatch({\r\n        type: ADMIN_TYPES.GET_TOTAL_ACTIVE_USERS,\r\n        payload: totalActiveUsers,\r\n      });\r\n    });\r\n   \r\n    return () => socket.off(\"getActiveUsersToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //!like Post\r\n  useEffect(() => {\r\n    socket.on(\"likeToClient\", (newPost) => {\r\n      dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n    });\r\n    \r\n    return () => socket.off(\"likeToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //!Unlike Post\r\n  useEffect(() => {\r\n    socket.on(\"unLikeToClient\", (newPost) => {\r\n      dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n    });\r\n   \r\n    return () => socket.off(\"unLikeToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //!Comments\r\n  useEffect(() => {\r\n    socket.on(\"createCommentToClient\", (newPost) => {\r\n      dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n     \r\n    });\r\n    return () => socket.off(\"createCommentToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"deleteCommentToClient\", (newPost) => {\r\n      dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n    });\r\n    \r\n    return () => socket.off(\"deleteCommentToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //!Follow\r\n  useEffect(() => {\r\n    \r\n    socket.on(\"followToClient\", (newUser) => {\r\n      dispatch({ type: GLOBALTYPES.AUTH, payload: { ...auth, user: newUser } });\r\n    });\r\n   \r\n    return () => socket.off(\"followToClient\");\r\n  }, [socket, dispatch, auth]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"unFollowToClient\", (newUser) => {\r\n      dispatch({\r\n        type: GLOBALTYPES.AUTH,\r\n        payload: { ...auth, user: newUser },\r\n      });\r\n    });\r\n    return () => socket.off(\"unFollowToClient\");\r\n  }, [socket, dispatch, auth]);\r\n\r\n  //!Notifications\r\n  useEffect(() => {\r\n    socket.on(\"createNotifyToClient\", (msg) => {\r\n      dispatch({ type: NOTIFY_TYPES.CREATE_NOTIFY, payload: msg });\r\n      const audio = new Audio(audioTone);\r\n      audio.play();\r\n      if (notify.sound) {\r\n        audioRef.current.play();\r\n      }\r\n      spawnNotification(\r\n        msg.user.username + \" \" + msg.text,\r\n        msg.user.avatar,\r\n        msg.url,\r\n        \"CAMPUS CONNECT\"\r\n      );\r\n    });\r\n    return () => socket.off(\"createNotifyToClient\");\r\n  }, [socket, dispatch, notify.sound]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"removeNotifyToClient\", (msg) => {\r\n      dispatch({ type: NOTIFY_TYPES.REMOVE_NOTIFY, payload: msg });\r\n    });\r\n    return () => socket.off(\"removeNotifyToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //!Messages\r\n  useEffect(() => {\r\n    socket.on(\"addMessageToClient\", (msg) => {\r\n      console.log(\"addMessageToClient socket called\")\r\n      dispatch({ type: MESSAGE_TYPES.ADD_MESSAGE, payload: msg });\r\n\r\n    });\r\n    return () => socket.off(\"addMessageToClient\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    \r\n      {/* <audio controls ref={audioRef} style={{display:\"none\"}}>\r\n        <source src={audioTone} type=\"audio/mp3\" />\r\n      </audio> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocketClient;\r\n"]},"metadata":{},"sourceType":"module"}