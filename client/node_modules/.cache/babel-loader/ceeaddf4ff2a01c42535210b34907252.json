{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/ruchikaashokbharati/Documents/SocialMediaProject-main/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"/Users/ruchikaashokbharati/Documents/SocialMediaProject-main/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/ruchikaashokbharati/Documents/SocialMediaProject-main/client/node_modules/@babel/runtime/regenerator/index.js\";export var checkImage=function checkImage(file){var err=\"\";if(!file){return err=\"File does not exist.\";}//?1 mb\nif(file.size>1024*1024){return err=\"File size must be less than 1 Mb.\";}if(file.type!=='image/jpeg'&&file.type!=='image/png'){return err=\"Image must be jpeg or png.\";}return err;};export var imageUpload=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(images){var imgArr,_iterator,_step,item,formData,res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"im in image upload\");imgArr=[];_iterator=_createForOfIteratorHelper(images);_context.prev=3;_iterator.s();case 5:if((_step=_iterator.n()).done){_context.next=20;break;}item=_step.value;formData=new FormData();if(item.camera){console.log(\"camera\",item.camera);formData.append(\"file\",item.camera);}else{formData.append(\"file\",item);}formData.append(\"upload_preset\",\"tutorial\");formData.append(\"cloud_name\",\"daeuzh0zl\");_context.next=13;return fetch(\"https://api.cloudinary.com/v1_1/daeuzh0zl/image/upload\",{method:\"POST\",body:formData});case 13:res=_context.sent;_context.next=16;return res.json();case 16:data=_context.sent;imgArr.push({public_id:data.public_id,url:data.secure_url});case 18:_context.next=5;break;case 20:_context.next=25;break;case 22:_context.prev=22;_context.t0=_context[\"catch\"](3);_iterator.e(_context.t0);case 25:_context.prev=25;_iterator.f();return _context.finish(25);case 28:return _context.abrupt(\"return\",imgArr);case 29:case\"end\":return _context.stop();}}},_callee,null,[[3,22,25,28]]);}));return function imageUpload(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/SocialMediaProject-main/client/src/utils/imageUpload.js"],"names":["checkImage","file","err","size","type","imageUpload","images","console","log","imgArr","item","formData","FormData","camera","append","fetch","method","body","res","json","data","push","public_id","url","secure_url"],"mappings":"seAAA,MAAO,IAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CAChC,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACA,GAAG,CAACD,IAAJ,CAAS,CACL,MAAOC,CAAAA,GAAG,CAAG,sBAAb,CACH,CACL;AACI,GAAGD,IAAI,CAACE,IAAL,CAAY,KAAO,IAAtB,CAA2B,CACtB,MAAQD,CAAAA,GAAG,CAAG,mCAAd,CACJ,CAED,GAAID,IAAI,CAACG,IAAL,GAAc,YAAd,EAA8BH,IAAI,CAACG,IAAL,GAAc,WAAhD,CAA6D,CAC3D,MAAQF,CAAAA,GAAG,CAAG,4BAAd,CACD,CAED,MAAOA,CAAAA,GAAP,CACH,CAfM,CAiBP,MAAO,IAAMG,CAAAA,WAAW,0FAAG,iBAAOC,MAAP,oKACvBC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACIC,MAFmB,CAEV,EAFU,sCAGLH,MAHK,8FAGbI,IAHa,aAIbC,QAJa,CAIF,GAAIC,CAAAA,QAAJ,EAJE,CAMnB,GAAGF,IAAI,CAACG,MAAR,CAAe,CACXN,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAqBE,IAAI,CAACG,MAA1B,EACAF,QAAQ,CAACG,MAAT,CAAgB,MAAhB,CAAwBJ,IAAI,CAACG,MAA7B,EACH,CAHD,IAGK,CACDF,QAAQ,CAACG,MAAT,CAAgB,MAAhB,CAAwBJ,IAAxB,EACH,CACDC,QAAQ,CAACG,MAAT,CAAgB,eAAhB,CAAiC,UAAjC,EACAH,QAAQ,CAACG,MAAT,CAAgB,YAAhB,CAA8B,WAA9B,EAbmB,uBAeDC,CAAAA,KAAK,CAAC,wDAAD,CAA2D,CAC9EC,MAAM,CAAE,MADsE,CAE9EC,IAAI,CAAEN,QAFwE,CAA3D,CAfJ,SAebO,GAfa,sCAoBAA,CAAAA,GAAG,CAACC,IAAJ,EApBA,SAoBbC,IApBa,eAqBnBX,MAAM,CAACY,IAAP,CAAY,CAAEC,SAAS,CAAEF,IAAI,CAACE,SAAlB,CAA6BC,GAAG,CAAEH,IAAI,CAACI,UAAvC,CAAZ,EArBmB,0PAyBhBf,MAzBgB,6EAAH,kBAAXJ,CAAAA,WAAW,4CAAjB","sourcesContent":["export const checkImage = (file) => {\n    let err = \"\";\n    if(!file){\n        return err = \"File does not exist.\";\n    }\n//?1 mb\n    if(file.size > 1024 * 1024){\n         return (err = \"File size must be less than 1 Mb.\");\n    }\n\n    if (file.type !== 'image/jpeg' && file.type !== 'image/png') {\n      return (err = \"Image must be jpeg or png.\");\n    }\n\n    return err;\n}\n\nexport const imageUpload = async (images) => {\n    console.log(\"im in image upload\");\n    let imgArr = [];\n    for(const item of images){\n        const formData = new FormData();\n\n        if(item.camera){\n            console.log(\"camera\",item.camera);\n            formData.append(\"file\", item.camera);\n        }else{\n            formData.append(\"file\", item);  \n        }\n        formData.append(\"upload_preset\", \"tutorial\");\n        formData.append(\"cloud_name\", \"daeuzh0zl\");\n        \n        const res = await fetch(\"https://api.cloudinary.com/v1_1/daeuzh0zl/image/upload\", {\n            method: \"POST\",\n            body: formData\n        })\n\n        const data = await res.json();\n        imgArr.push({ public_id: data.public_id, url: data.secure_url });\n        \n      \n    }\n    return imgArr;\n}"]},"metadata":{},"sourceType":"module"}